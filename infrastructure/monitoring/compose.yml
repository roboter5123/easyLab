version: "3"
services:

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    labels:
      - traefik.enable=true 
      - traefik.http.routers.grafana.rule=Host(`grafana.domain.com`) 
      - traefik.http.routers.grafana.entrypoints=websecure  
      - traefik.http.routers.grafana.tls.certresolver=letsencrypt
    user: root
    ports:
      - 3000:3000
    volumes:
      - {path to config}/grafana:/var/lib/grafana
    networks:
      - proxied_apps
      - monitoring
    restart: unless-stopped   

######################################################################

  prometheus:
    image: prom/prometheus:v2.37.9
    container_name: prometheus
    labels:
      - traefik.enable=true 
      - traefik.http.routers.prometheus.rule=Host(`prometheus.domain.com`) 
      - traefik.http.routers.prometheus.entrypoints=websecure  
      - traefik.http.routers.prometheus.tls.certresolver=letsencrypt
    user: root
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - {path to config}/prometheus/config:/etc/prometheus
      - {path to config}/prometheus/data:/prometheus
    networks:
      - monitoring
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    restart: unless-stopped   

#########################################################################

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: '--path.rootfs=/host'
    pid: host
    networks:
      - monitoring
    volumes:
      - /:/host:ro,rslave
    ports:
      - 9100:9100
    restart: unless-stopped   

############################################################################

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    command:
      - "--housekeeping_interval=30s"
      - "--docker_only=true"
      - "--disable_metrics=percpu,sched,tcp,udp,disk,diskIO,accelerator,hugetlb,referenced_memory,cpu_topology,resctrl"
    ports:
      - 8080:8080
    networks:
      - monitoring
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped   

networks:
  proxied_apps:
    external: true
  monitoring:
    name: monitoring